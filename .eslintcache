[{"/home/manhee/Projects/Sandbox/React/rrts-second/src/index.tsx":"1","/home/manhee/Projects/Sandbox/React/rrts-second/src/components/App.tsx":"2","/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/reducers/index.ts":"3","/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/reducers/todos.ts":"4","/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/actions/index.ts":"5","/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/actions/types.ts":"6","/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/actions/todos.ts":"7","/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/reducers/filters.ts":"8","/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/actions/filter.ts":"9"},{"size":590,"mtime":1607154982585,"results":"10","hashOfConfig":"11"},{"size":1878,"mtime":1607161000569,"results":"12","hashOfConfig":"11"},{"size":221,"mtime":1607158221559,"results":"13","hashOfConfig":"11"},{"size":2027,"mtime":1607167618125,"results":"14","hashOfConfig":"11"},{"size":76,"mtime":1607097409125,"results":"15","hashOfConfig":"11"},{"size":454,"mtime":1607160943428,"results":"16","hashOfConfig":"11"},{"size":802,"mtime":1607078155039,"results":"17","hashOfConfig":"11"},{"size":372,"mtime":1607155751095,"results":"18","hashOfConfig":"11"},{"size":823,"mtime":1607160967389,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ibsun5",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/manhee/Projects/Sandbox/React/rrts-second/src/index.tsx",[],"/home/manhee/Projects/Sandbox/React/rrts-second/src/components/App.tsx",["39"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { ITodos, fetchTodos, deleteTodo } from '../redux/actions';\nimport { IStoreState } from '../redux/reducers';\nimport { addFilterAction, filterThunk, removeFilter } from '../redux/actions';\nimport '../styles.scss';\n\ninterface IAppProps {\n  products: any;\n  fetchTodos: Function;\n  deleteTodo: typeof deleteTodo;\n  addFilterAction: typeof addFilterAction;\n  filterThunk: Function;\n  removeFilter: typeof removeFilter;\n}\n\nclass _App extends React.Component<IAppProps> {\n  onButtonClick = (): void => {\n    this.props.fetchTodos();\n  };\n\n  onClickTodo = (id: number) => {\n    this.props.deleteTodo(id);\n  };\n\n  onFilter = (): void => {\n    this.props.addFilterAction('delectus');\n  };\n  onRemoveFilter = (): void => {\n    this.props.removeFilter('delectus');\n  };\n\n  render() {\n    const list = (): JSX.Element[] => {\n      return this.props.products.todos.map((todo: ITodos) => (\n        <li onClick={() => this.onClickTodo(todo.id)} key={todo.id}>\n          {todo.title}\n        </li>\n      ));\n    };\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          paddingTop: '24px',\n        }}\n      >\n        <div style={{ width: '1000px' }}>\n          <div className=\"custom-button\">\n            <button onClick={this.onFilter}>Add Filter</button>\n            <button onClick={this.onRemoveFilter}>Remove Filter</button>\n          </div>\n          <div className=\"custom-button\">\n            <button onClick={this.onButtonClick}>Fetch</button>\n          </div>\n          <ul>{list()}</ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    products: state.products,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTodos,\n  deleteTodo,\n  addFilterAction,\n  filterThunk,\n  removeFilter,\n})(_App);\n","/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/reducers/index.ts",[],"/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/reducers/todos.ts",[],"/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/actions/index.ts",[],"/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/actions/types.ts",[],"/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/actions/todos.ts",[],"/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/reducers/filters.ts",[],"/home/manhee/Projects/Sandbox/React/rrts-second/src/redux/actions/filter.ts",[],{"ruleId":"40","severity":1,"message":"41","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":21},"@typescript-eslint/no-unused-vars","'IStoreState' is defined but never used.","Identifier","unusedVar"]